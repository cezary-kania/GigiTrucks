version: '3.7'

services:
  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  mssql-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=${MSSQL_SA_PASSWORD}"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql/data
        
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
  
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite-blob --blobHost 0.0.0.0 --location /data"
    ports:
      - "10000:10000"
      - "10001:10001"
    volumes:
      - azurite_data:/data
        
  rabbitmq:
    image: rabbitmq:3.11.8-management
    container_name: gigitrucks.rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672

  users:
    image: ${DOCKER_REGISTRY}/gigitruck.users
    container_name: gigitruck.users
    build:
      context: ../
      dockerfile: src/Services/Users/GigiTrucks.Services.Users.Api/Dockerfile
    depends_on:
      - postgres-db
    restart: on-failure
    ports:
      - "5050:80"
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__Postgres=${DB_CONNECTIONS_STRING}
      - JwtSettings__Secret=${AUTH_SECRET}
    volumes:
      - ~/.aspnet/https:/https:ro

volumes: 
  postgres_data:
  mssql_data:
  redis:
  azurite_data: